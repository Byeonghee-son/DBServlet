package sqlconnection;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;

//Statement : 완결된 쿼리문을 실행할떄
//preparedStatement: 변수로 값을 추가할 수 있는 쿼리문을 실행할 떄
//select --> executeQuery : preparedStatement, Statement
//insert/delete/update --> : preparedStatement, Statement


public class sqlconnection2 {
	Connection con = null;
	 
	
	private void insertDeptStatement(String dno, String dname, int budget) {
		String sql = String.format("insert into dept (dno, dname, budget) values ('%s', '%s', '%d')", dno, dname, budget);
		
		try{
			Statement st = con.createStatement();
			st.executeUpdate(sql);
		}catch(Exception e) {
			e.printStackTrace();
		} 
		System.out.println("데이터베이스가 입력되었습니다.");
	}
		
		
	private void insertDept(String dno, String dname, int budget) {
		String sql = "insert into dept(dno,dname,budget) values (?,?,?)";
		try {
		PreparedStatement ps = con.prepareStatement(sql);
		ps.setString(1,dno);
		ps.setString(2, dname);
		ps.setInt(3,budget);
		ps.executeUpdate();
			
		}catch(SQLException e) {
			e.printStackTrace();
		}
		System.out.println("데이터베이스가 입력되었습니다.");
	}
	
	private boolean connectDB() {
		try {
			Class.forName("com.mysql.cj.jdbc.Driver");
			con = DriverManager.getConnection("jdbc:mysql://localhost:3306/warehouse", "scott", "tiger");
			System.out.println("데이터베이스가 연결되었습니다.");
			return true;
		} catch (Exception e) {
			e.printStackTrace();
		}
		return false;
	}

	private void closeDB() {
		try {
			con.close();
			System.out.println("데이터베이스가 닫혔습니다.");
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	private void deleteDepttriggerStatement(int from, int to) {
		String sql = String.format("delete from depttrigger where %d <= id and id <= %d",from,to);
		
		try{
			Statement st = con.createStatement();
			st.executeUpdate(sql);
		}catch(Exception e) {
			e.printStackTrace();
		} 
		System.out.println("데이터베이스가 삭제되었습니다.");
	}
	private void deleteDepttriggerPrepared(int from, int to) {
		String sql = "delete from depttrigger where ? <= id and id <= ?";
		try {
		PreparedStatement ps = con.prepareStatement(sql);
		ps.setInt(1, from);
        ps.setInt(2, to);
		ps.executeUpdate();
			
		}catch(SQLException e) {
			e.printStackTrace();
		}
		System.out.println("데이터베이스가 삭제되었습니다.");
	}
	
	private void updateDeptPrepared(String dno, String dname, int budget) {
		try {
			PreparedStatement ps = con.prepareStatement("update dept set dname=? , budget = ? where dno =?");
			ps.setString(1,dname);
			ps.setInt(2, budget);
			ps.setString(3, dno);
			ps.executeUpdate();			
		} catch (SQLException e) {
			
			e.printStackTrace();
		}
		System.out.println("데이터베이스가 수정되었습니다.");
	}
	private void updateDeptStatement(String dno, String dname, int budget) {
		String sql = String.format("update dept set dname = %s ,budget = %d where dno = %s" , dno, dname, budget);
		
		try{
			Statement st = con.createStatement();
			st.executeUpdate(sql);
		}catch(Exception e) {
			e.printStackTrace();
		} 
		System.out.println("데이터베이스가 수정되었습니다.");
	}
	
	
	public static void main(String[] args) {
		sqlconnection2 tt = new sqlconnection2();
		if (tt.connectDB()) {
			//tt.insertDeptStatement("d35", "dname35", 123);
			//tt.insertDeptStatement("d36", "dname36", 123);
			//tt.deleteDepttriggerStatement(1, 3);
			//tt.deleteDepttriggerPrepared(10, 13);
			//tt.updateDeptPrepared("d1", "dname11", 1000);
			tt.updateDeptStatement("d5", "dname5", 2000);
			tt.closeDB();
		}
	}
}
